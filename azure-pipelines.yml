trigger:
  branches:
    include:
      - main  # Se ejecuta en cada commit o merge a main

pr:
  branches:
    include:
      - dev   # Valida PRs desde dev

variables:
  tag: '$(Build.BuildId)'
  imageName: 'bernardo2004/recipes-proy'
  dockerConnection: 'docker'

stages:
# Validar PR (solo al crear PR, sin push)
- stage: Validate
  displayName: 'Validar Pull Request (sin push)'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:
  - job: Validate
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
    - script: |
        npm install
        echo "AÃºn no hay pruebas unitarias configuradas"
      displayName: 'Instalar dependencias y correr pruebas'

# Build & Push (solo cuando llega a main)
- stage: BuildAndPush
  displayName: 'Build & Push Docker Image'
  # Se ejecuta si viene de main y no es PR
  condition: |
    and(
      succeeded(),
      or(
        eq(variables['Build.SourceBranch'], 'refs/heads/main'),
        eq(variables['Build.SourceBranchName'], 'main')
      ),
      ne(variables['Build.Reason'], 'PullRequest')
    )
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - script: |
        npm ci
      displayName: 'Instalar dependencias'

    - task: Docker@2
      displayName: 'Build and Push Docker image'
      inputs:
        command: buildAndPush
        containerRegistry: '$(dockerConnection)'
        repository: '$(imageName)'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
          latest
